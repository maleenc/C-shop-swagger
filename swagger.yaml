openapi: 3.0.0
info:
  title: Shopping Cart API
  version: 1.0.0
paths:
  /cart:
    post:
      summary: Add item to cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: string
                  description: ID of the item to add to the cart
                quantity:
                  type: integer
                  description: Quantity of the item to add
                  minimum: 1
                  default: 1
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request, invalid input
    get:
      summary: Get cart contents
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId:
                          type: string
                          description: ID of the item in the cart
                        quantity:
                          type: integer
                          description: Quantity of the item in the cart
                  totalItems:
                    type: integer
                    description: Total number of items in the cart
                  totalPrice:
                    type: number
                    description: Total price of items in the cart
        '404':
          description: Cart not found
  /cart/{itemId}:
    delete:
      summary: Remove item from cart
      parameters:
        - name: itemId
          in: path
          required: true
          description: ID of the item to remove from the cart
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '404':
          description: Item not found in the cart
  /checkout:
    post:
      summary: Initiate checkout process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartId:
                  type: string
                  description: ID of the cart to checkout
                userId:
                  type: string
                  description: ID of the user initiating the checkout
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: ID of the created order
                  totalAmount:
                    type: number
                    description: Total amount to be paid
        '400':
          description: Bad request, invalid input

  /checkout/shipping:
    post:
      summary: Provide shipping information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  description: ID of the order to provide shipping information for
                address:
                  type: object
                  properties:
                    street:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zipCode:
                      type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request, invalid input
        '404':
          description: Order not found

  /checkout/payment:
    post:
      summary: Process payment for the order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  description: ID of the order to process payment for
                paymentMethod:
                  type: string
                  description: Payment method avaialble in aggregator(e.g., credit card, PayPal)
                amount:
                  type: string
                  description: complete order transaction value
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                    description: ID of the completed payment transaction
        '400':
          description: Bad request, invalid input
        '404':
          description: Order not found

  /checkout/complete:
    post:
      summary: Complete the checkout process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  description: ID of the order to complete
                transactionId:
                  type: string
                  description: ID of the completed payment transaction
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request, invalid input
        '404':
          description: Order not found
  /products:
    get:
      summary: Get list of products
      parameters:
        - name: category
          in: query
          description: Filter products by category
          schema:
            type: string
        - name: brand
          in: query
          description: Filter products by brand
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request, invalid input

  /products/{productId}:
    get:
      summary: Get details of a specific product
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

  /products/search:
    get:
      summary: Search for products based on criteria
      parameters:
        - name: query
          in: query
          required: true
          description: Search query
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request, invalid input
  /payment-options:
    get:
      summary: Get list of available payment options
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentOption'
        '500':
          description: Internal server error

  /payment:
    post:
      summary: Initiate a payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Bad request, invalid input
        '404':
          description: Payment option not found
        '500':
          description: Internal server error

  /payment-status/{transactionId}:
    get:
      summary: Check the status of a payment
      parameters:
        - name: transactionId
          in: path
          required: true
          description: ID of the payment transaction
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        '404':
          description: Payment transaction not found
        '500':
          description: Internal server error

  /payment-callback:
    post:
      summary: Receive transaction callback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCallback'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request, invalid input
        '500':
          description: Internal server error

components:
  schemas:
    PaymentOption:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the payment option
        name:
          type: string
          description: Name of the payment option
        description:
          type: string
          description: Description of the payment option

    PaymentRequest:
      type: object
      properties:
        paymentOptionId:
          type: string
          description: ID of the selected payment option
        amount:
          type: number
          format: double
          description: Amount to be paid
        currency:
          type: string
          description: Currency code (e.g., USD, EUR)
        customerDetails:
          $ref: '#/components/schemas/CustomerDetails'

    PaymentResponse:
      type: object
      properties:
        transactionId:
          type: string
          description: Unique ID of the payment transaction
        paymentStatus:
          type: string
          description: Status of the payment (e.g., "pending", "success", "failure")

    PaymentStatus:
      type: object
      properties:
        transactionId:
          type: string
          description: Unique ID of the payment transaction
        paymentStatus:
          type: string
          description: Status of the payment (e.g., "pending", "success", "failure")

    CustomerDetails:
      type: object
      properties:
        customerId:
          type: string
          description: ID of the customer
        email:
          type: string
          description: Email address of the customer
        name:
          type: string
          description: Name of the customer

    PaymentCallback:
      type: object
      properties:
        transactionId:
          type: string
          description: Unique ID of the payment transaction
        paymentStatus:
          type: string
          description: Status of the payment (e.g., "success", "failure")
        callbackData:
          type: object
          description: Additional data related to the callback
          additionalProperties: true

    Product:
      type: object
      properties:
        productId:
          type: string
          description: ID of the product
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Description of the product
        price:
          type: number
          format: double
          description: Price of the product
        category:
          type: string
          description: Category of the product
        brand:
          type: string
          description: Brand of the product
